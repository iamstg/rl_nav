from numpy import *
from geometry_msgs.msg import Twist,Point
def get_bernstein_differentials(t0,t,tf):
	Bodot=-((5*(1 - (t - t0)/(-t0 + tf))**4)/(-t0 + tf))
	B1dot=-((20*(t - t0)*(1 - (t - t0)/(-t0 + tf))**3)/(-t0 + tf)**2) + (5*(1 - (t - t0)/(-t0 + tf))**4)/(-t0 + tf)
	B2dot=-((30*(t - t0)**2*(1 - (t - t0)/(-t0 + tf))**2)/(-t0 + tf)**3) + (20*(t - t0)*(1 - (t - t0)/(-t0 + tf))**3)/(-t0 + tf)**2
	B3dot=-((20*(t - t0)**3*(1 - (t - t0)/(-t0 + tf)))/(-t0 + tf)**4) + (30*(t - t0)**2*(1 - (t - t0)/(-t0 + tf))**2)/(-t0 + tf)**3
	B4dot=-((5*(t - t0)**4)/(-t0 + tf)**5) + (20*(t - t0)**3*(1 - (t - t0)/(-t0 + tf)))/(-t0 + tf)**4
	B5dot=(5*(t - t0)**4)/(-t0 + tf)**5
	Boddot=(20*(1 - (t - t0)/(-t0 + tf))**3)/(-t0 + tf)**2
	B1ddot=(60*(t - t0)*(1 - (t - t0)/(-t0 + tf))**2)/(-t0 + tf)**3 - (40*(1 - (t - t0)/(-t0 + tf))**3)/(-t0 + tf)**2
	B2ddot=(60*(t - t0)**2*(1 - (t - t0)/(-t0 + tf)))/(-t0 + tf)**4 - (120*(t - t0)*(1 - (t - t0)/(-t0 + tf))**2)/(-t0 + tf)**3 + (20*(1 - (t - t0)/(-t0 + tf))**3)/(-t0 + tf)**2
	B3ddot=(20*(t - t0)**3)/(-t0 + tf)**5 - (120*(t - t0)**2*(1 - (t - t0)/(-t0 + tf)))/(-t0 + tf)**4 + (60*(t - t0)*(1 - (t - t0)/(-t0 + tf))**2)/(-t0 + tf)**3
	B4ddot=-((40*(t - t0)**3)/(-t0 + tf)**5) + (60*(t - t0)**2*(1 - (t - t0)/(-t0 + tf)))/(-t0 + tf)**4
	B5ddot=(20*(t - t0)**3)/(-t0 + tf)**5
	return [Bodot,B1dot,B2dot,B3dot,B4dot,B5dot,Boddot,B1ddot,B2ddot,B3ddot,B4ddot,B5ddot]


def get_bernstein_coefficients(to,t,tf):

	B0= (1 - (t - to)/(-to + tf))**5
	B1=(5*(t - to)*(1 - (t - to)/(-to + tf))**4)/(-to + tf)
	B2= (10*(t - to)**2*(1 - (t - to)/(-to + tf))**3)/(-to + tf)**2
	B3= (10*(t - to)**3*(1 - (t - to)/(-to + tf))**2)/(-to + tf)**3
	B4=(5*(t - to)**4*(1 - (t - to)/(-to + tf)))/(-to + tf)**4
	B5= (t - to)**5/(-to + tf)**5
	return [B0,B1,B2,B3,B4,B5]


def xcomptraj_points(inp,T):

	xo = inp[0]
	xf = inp[1]
	xdoto = inp[2]
	xdotf = inp[3]
	xddoto = inp[4]
	xc = inp[5:]

	to = T[0]
	tf = T[-1]

	## get bernstein coeficients at t=tc
	BT = []
	for t in T:
		BT.append(get_bernstein_coefficients(to,t,tf))

	## --get differentials of bernstein coeffs at t=to:
	t=to
	[Bodoto,B1doto,B2doto,B3doto,B4doto,B5doto,Boddoto,B1ddoto,B2ddoto,B3ddoto,B4ddoto,B5ddoto]=get_bernstein_differentials(to,t,tf)
	##,--get,differentials,of,bernstein,coeffs,at,t=tf:
	t=tf
	[Bodotf,B1dotf,B2dotf,B3dotf,B4dotf,B5dotf,Boddotf,B1ddotf,B2ddotf,B3ddotf,B4ddotf,B5ddotf]=get_bernstein_differentials(to,t,tf)

	  ## the following lines of code implement the continuity,
	  ## continuity are basically of the form AX=B, where A is A1 here and 'X' are the weights of the bernstein
	  ## here 'X' is XX and the weights of the bernstein here are that of 'y' i.e: 
	  ## x = B0*xo+B1*x1+B2*x2+B3*x3+B4*x4+B5*xf, we determine x1,x2,x3,x4 here 
	  ## xo and xf are already initialized. 
	  ## coefot,coef1t,coef2t,coef3t,coef4t,coef5t are basically functions of weights of the 'x' bernstein  and time
	  
	## A1 is with midpoint constarints
	
	A1 = array([[i[1],i[2],i[3],i[4]] for i in BT[1:-1]]+##,condition,for,'x',at,t=tc.,i.e,xc
		  [[B1doto,B2doto,B3doto,B4doto],##,initial,condition,of,xdot
		  [B1ddoto,B2ddoto,B3ddoto,B4ddoto],##,initial,condition,of,xddot
		  [B1dotf,B2dotf,B3dotf,B4dotf]])##,final,condition,of,xdot
	  
	## A2 is without midpoint constarints
	C1 = [xc[i]-xo*BT[i+1][0]-xf*BT[i+1][5] for i in range(len(xc))]  ## row1 of the 'B' array correspomding to the first condition of A1
	C2 = xdoto-Bodoto*xo-B5doto*xf ## row2 of the 'B' array correspomding to the first condition of A2
	C3 = xddoto-Boddoto*xo-B5ddoto*xf ## row3 of the 'B' array correspomding to the first condition of A3
	C4 = xdotf-Bodotf*xo-B5dotf*xf ## row4 of the 'B' array correspomding to the first condition of A4

	C = array(C1+[C2,C3,C4]) ## with midpoint constarints
	 #C = [C2C3C4] ## without midpoint constarints
	## XX is the array with midpoint constraints:
	XX = dot(linalg.pinv(A1),C)
	x1 = XX[0]
	x2 = XX[1]
	x3 = XX[2]
	x4 = XX[3]

	return [xo,x1,x2,x3,x4,xf]


def xcomptraj(inp,to,tc,tf):

	xo = inp[0]
	xf = inp[1]
	xdoto = inp[2]
	xdotf = inp[3]
	xddoto = inp[4]
	xc = inp[5]



	## get bernstein coeficients at t=tc
	t=tc
	[Botc,B1tc,B2tc,B3tc,B4tc,B5tc] = get_bernstein_coefficients(to,t,tf)

	## --get differentials of bernstein coeffs at t=to:
	t=to
	[Bodoto,B1doto,B2doto,B3doto,B4doto,B5doto,Boddoto,B1ddoto,B2ddoto,B3ddoto,B4ddoto,B5ddoto]=get_bernstein_differentials(to,t,tf)
	##,--get,differentials,of,bernstein,coeffs,at,t=tf:
	t=tf
	[Bodotf,B1dotf,B2dotf,B3dotf,B4dotf,B5dotf,Boddotf,B1ddotf,B2ddotf,B3ddotf,B4ddotf,B5ddotf]=get_bernstein_differentials(to,t,tf)

	  ## the following lines of code implement the continuity,
	  ## continuity are basically of the form AX=B, where A is A1 here and 'X' are the weights of the bernstein
	  ## here 'X' is XX and the weights of the bernstein here are that of 'y' i.e: 
	  ## x = B0*xo+B1*x1+B2*x2+B3*x3+B4*x4+B5*xf, we determine x1,x2,x3,x4 here 
	  ## xo and xf are already initialized. 
	  ## coefot,coef1t,coef2t,coef3t,coef4t,coef5t are basically functions of weights of the 'x' bernstein  and time
	  
	## A1 is with midpoint constarints
	A1 = array([[B1tc,B2tc,B3tc,B4tc],##,condition,for,'x',at,t=tc.,i.e,xc
		  [B1doto,B2doto,B3doto,B4doto],##,initial,condition,of,xdot
		  [B1ddoto,B2ddoto,B3ddoto,B4ddoto],##,initial,condition,of,xddot
		  [B1dotf,B2dotf,B3dotf,B4dotf]])##,final,condition,of,xdot
	  
	## A2 is without midpoint constarints
	C1 = xc-xo*Botc-xf*B5tc  ## row1 of the 'B' array correspomding to the first condition of A1
	C2 = xdoto-Bodoto*xo-B5doto*xf ## row2 of the 'B' array correspomding to the first condition of A2
	C3 = xddoto-Boddoto*xo-B5ddoto*xf ## row3 of the 'B' array correspomding to the first condition of A3
	C4 = xdotf-Bodotf*xo-B5dotf*xf ## row4 of the 'B' array correspomding to the first condition of A4

	C = array([C1,C2,C3,C4]) ## with midpoint constarints
	 #C = [C2C3C4] ## without midpoint constarints
	## XX is the array with midpoint constraints:
	XX = dot(linalg.pinv(A1),C)
	x1 = XX[0]
	x2 = XX[1]
	x3 = XX[2]
	x4 = XX[3]

	return [xo,x1,x2,x3,x4,xf]


	  
def get_coeff( x0,x1,x2,x3,x4,x5,to,t,tf ):
	coefot=-(1.0/((to-tf)**10.0))*5.0*(-(t**10.0/10.0)+to**10.0/10.0+t**9.0*tf-to**9.0*tf-(9.0*t**8.0*tf**2.0)/2.0+(9.0*to**8.0*tf**2.0)/2.0+12.0*t**7.0*tf**3.0-12.0*to**7.0*tf**3.0-21.0*t**6.0*tf**4.0+21.0*to**6.0*tf**4.0+(126.0*t**5.0*tf**5.0)/5.0-(126.0*to**5.0*tf**5.0)/5.0-21.0*t**4.0*tf**6.0+21.0*to**4.0*tf**6.0+12.0*t**3.0*tf**7.0-12.0*to**3.0*tf**7.0-(9.0*t**2.0*tf**8.0)/2.0+(9.0*to**2.0*tf**8.0)/2.0+t*tf**9.0-to*tf**9.0)*x0-(1.0/((to-tf)**10.0))*5.0*(t**10.0/2.0-(4.0*t**9.0*to)/9.0-to**10.0/18.0-(41.0*t**9.0*tf)/9.0+4.0*t**8.0*to*tf+(5.0*to**9.0*tf)/9.0+(37.0*t**8.0*tf**2.0)/2.0-16.0*t**7.0*to*tf**2.0-(5.0*to**8.0*tf**2.0)/2.0-44.0*t**7.0*tf**3.0+112.0/3.0*t**6.0*to*tf**3.0+(20.0*to**7.0*tf**3.0)/3.0+(203.0*t**6.0*tf**4.0)/3.0-56.0*t**5.0*to*tf**4.0-(35.0*to**6.0*tf**4.0)/3.0-70.0*t**5.0*tf**5.0+56.0*t**4.0*to*tf**5.0+14.0*to**5.0*tf**5.0+49.0*t**4.0*tf**6.0-112.0/3.0*t**3.0*to*tf**6.0-(35.0*to**4.0*tf**6.0)/3.0-(68.0*t**3.0*tf**7.0)/3.0+16.0*t**2.0*to*tf**7.0+(20.0*to**3.0*tf**7.0)/3.0+(13.0*t**2.0*tf**8.0)/2.0-4.0*t*to*tf**8.0-(5.0*to**2.0*tf**8.0)/2.0-t*tf**9.0+to*tf**9.0)*x1-(1.0/((to-tf)**10.0))*5.0*(-t**10.0+(16.0*t**9.0*to)/9.0-(3.0*t**8.0*to**2.0)/4.0-to**10.0/36.0+(74.0*t**9.0*tf)/9.0-29.0/2.0*t**8.0*to*tf+6.0*t**7.0*to**2.0*tf+(5.0*to**9.0*tf)/18.0-(119.0*t**8.0*tf**2.0)/4.0+52.0*t**7.0*to*tf**2.0-21.0*t**6.0*to**2.0*tf**2.0-(5.0*to**8.0*tf**2.0)/4.0+62.0*t**7.0*tf**3.0-322.0/3.0*t**6.0*to*tf**3.0+42.0*t**5.0*to**2.0*tf**3.0+(10.0*to**7.0*tf**3.0)/3.0-(245.0*t**6.0*tf**4.0)/3.0+140.0*t**5.0*to*tf**4.0-105.0/2.0*t**4.0*to**2.0*tf**4.0-(35.0*to**6.0*tf**4.0)/6.0+70.0*t**5.0*tf**5.0-119.0*t**4.0*to*tf**5.0+42.0*t**3.0*to**2.0*tf**5.0+7.0*to**5.0*tf**5.0-(77.0*t**4.0*tf**6.0)/2.0+196.0/3.0*t**3.0*to*tf**6.0-21.0*t**2.0*to**2.0*tf**6.0-(35.0*to**4.0*tf**6.0)/6.0+(38.0*t**3.0*tf**7.0)/3.0-22.0*t**2.0*to*tf**7.0+6.0*t*to**2.0*tf**7.0+(10.0*to**3.0*tf**7.0)/3.0-2.0*t**2.0*tf**8.0+4.0*t*to*tf**8.0-2.0*to**2.0*tf**8.0)*x2-(1.0/((to-tf)**10.0))*5.0*(t**10.0-(8.0*t**9.0*to)/3.0+(9.0*t**8.0*to**2.0)/4.0-(4.0*t**7.0*to**3.0)/7.0-to**10.0/84.0-(22.0*t**9.0*tf)/3.0+39.0/2.0*t**8.0*to*tf-114.0/7.0*t**7.0*to**2.0*tf+4.0*t**6.0*to**3.0*tf+(5.0*to**9.0*tf)/42.0+(93.0*t**8.0*tf**2.0)/4.0-432.0/7.0*t**7.0*to*tf**2.0+51.0*t**6.0*to**2.0*tf**2.0-12.0*t**5.0*to**3.0*tf**2.0-(15.0*to**8.0*tf**2.0)/28.0-(290.0*t**7.0*tf**3.0)/7.0+110.0*t**6.0*to*tf**3.0-90.0*t**5.0*to**2.0*tf**3.0+20.0*t**4.0*to**3.0*tf**3.0+(10.0*to**7.0*tf**3.0)/7.0+45.0*t**6.0*tf**4.0-120.0*t**5.0*to*tf**4.0+195.0/2.0*t**4.0*to**2.0*tf**4.0-20.0*t**3.0*to**3.0*tf**4.0-(5.0*to**6.0*tf**4.0)/2.0-30.0*t**5.0*tf**5.0+81.0*t**4.0*to*tf**5.0-66.0*t**3.0*to**2.0*tf**5.0+12.0*t**2.0*to**3.0*tf**5.0+3.0*to**5.0*tf**5.0+(23.0*t**4.0*tf**6.0)/2.0-32.0*t**3.0*to*tf**6.0+27.0*t**2.0*to**2.0*tf**6.0-4.0*t*to**3.0*tf**6.0-(5.0*to**4.0*tf**6.0)/2.0-2.0*t**3.0*tf**7.0+6.0*t**2.0*to*tf**7.0-6.0*t*to**2.0*tf**7.0+2.0*to**3.0*tf**7.0)*x3-(1.0/((to-tf)**10.0))*5.0*(-(t**10.0/2.0)+(16.0*t**9.0*to)/9.0-(9.0*t**8.0*to**2.0)/4.0+(8.0*t**7.0*to**3.0)/7.0-(t**6.0*to**4.0)/6.0-to**10.0/252.0+(29.0*t**9.0*tf)/9.0-23.0/2.0*t**8.0*to*tf+102.0/7.0*t**7.0*to**2.0*tf-22.0/3.0*t**6.0*to**3.0*tf+t**5.0*to**4.0*tf+(5.0*to**9.0*tf)/126.0-(35.0*t**8.0*tf**2.0)/4.0+220.0/7.0*t**7.0*to*tf**2.0-40.0*t**6.0*to**2.0*tf**2.0+20.0*t**5.0*to**3.0*tf**2.0-5.0/2.0*t**4.0*to**4.0*tf**2.0-(5.0*to**8.0*tf**2.0)/28.0+(90.0*t**7.0*tf**3.0)/7.0-140.0/3.0*t**6.0*to*tf**3.0+60.0*t**5.0*to**2.0*tf**3.0-30.0*t**4.0*to**3.0*tf**3.0+10.0/3.0*t**3.0*to**4.0*tf**3.0+(10.0*to**7.0*tf**3.0)/21.0-(65.0*t**6.0*tf**4.0)/6.0+40.0*t**5.0*to*tf**4.0-105.0/2.0*t**4.0*to**2.0*tf**4.0+80.0/3.0*t**3.0*to**3.0*tf**4.0-5.0/2.0*t**2.0*to**4.0*tf**4.0-(5.0*to**6.0*tf**4.0)/6.0+5.0*t**5.0*tf**5.0-19.0*t**4.0*to*tf**5.0+26.0*t**3.0*to**2.0*tf**5.0-14.0*t**2.0*to**3.0*tf**5.0+t*to**4.0*tf**5.0+to**5.0*tf**5.0-t**4.0*tf**6.0+4.0*t**3.0*to*tf**6.0-6.0*t**2.0*to**2.0*tf**6.0+4.0*t*to**3.0*tf**6.0-to**4.0*tf**6.0)*x4-(1.0/((to-tf)**10.0))*5.0*(t**10.0/10.0-(4.0*t**9.0*to)/9.0+(3.0*t**8.0*to**2.0)/4.0-(4.0*t**7.0*to**3.0)/7.0+(t**6.0*to**4.0)/6.0-to**10.0/1260.0-(5.0*t**9.0*tf)/9.0+5.0/2.0*t**8.0*to*tf-30.0/7.0*t**7.0*to**2.0*tf+10.0/3.0*t**6.0*to**3.0*tf-t**5.0*to**4.0*tf+(to**9.0*tf)/126.0+(5.0*t**8.0*tf**2.0)/4.0-40.0/7.0*t**7.0*to*tf**2.0+10.0*t**6.0*to**2.0*tf**2.0-8.0*t**5.0*to**3.0*tf**2.0+5.0/2.0*t**4.0*to**4.0*tf**2.0-(to**8.0*tf**2.0)/28.0-(10.0*t**7.0*tf**3.0)/7.0+20.0/3.0*t**6.0*to*tf**3.0-12.0*t**5.0*to**2.0*tf**3.0+10.0*t**4.0*to**3.0*tf**3.0-10.0/3.0*t**3.0*to**4.0*tf**3.0+(2.0*to**7.0*tf**3.0)/21.0+(5.0*t**6.0*tf**4.0)/6.0-4.0*t**5.0*to*tf**4.0+15.0/2.0*t**4.0*to**2.0*tf**4.0-20.0/3.0*t**3.0*to**3.0*tf**4.0+5.0/2.0*t**2.0*to**4.0*tf**4.0-(to**6.0*tf**4.0)/6.0-(t**5.0*tf**5.0)/5.0+t**4.0*to*tf**5.0-2.0*t**3.0*to**2.0*tf**5.0+2.0*t**2.0*to**3.0*tf**5.0-t*to**4.0*tf**5.0+(to**5.0*tf**5.0)/5.0)*x5
	coef1t=-(1.0/((to-tf)**10.0))*5.0*(t**10.0/2.0-(5.0*t**9.0*to)/9.0+to**10.0/18.0-(40.0*t**9.0*tf)/9.0+5.0*t**8.0*to*tf-(5.0*to**9.0*tf)/9.0+(35.0*t**8.0*tf**2.0)/2.0-20.0*t**7.0*to*tf**2.0+(5.0*to**8.0*tf**2.0)/2.0-40.0*t**7.0*tf**3.0+140.0/3.0*t**6.0*to*tf**3.0-(20.0*to**7.0*tf**3.0)/3.0+(175.0*t**6.0*tf**4.0)/3.0-70.0*t**5.0*to*tf**4.0+(35.0*to**6.0*tf**4.0)/3.0-56.0*t**5.0*tf**5.0+70.0*t**4.0*to*tf**5.0-14.0*to**5.0*tf**5.0+35.0*t**4.0*tf**6.0-140.0/3.0*t**3.0*to*tf**6.0+(35.0*to**4.0*tf**6.0)/3.0-(40.0*t**3.0*tf**7.0)/3.0+20.0*t**2.0*to*tf**7.0-(20.0*to**3.0*tf**7.0)/3.0+(5.0*t**2.0*tf**8.0)/2.0-5.0*t*to*tf**8.0+(5.0*to**2.0*tf**8.0)/2.0)*x0-(1.0/((to-tf)**10.0))*5.0*(-((5.0*t**10.0)/2.0)+5.0*t**9.0*to-(5.0*t**8.0*to**2.0)/2.0+20.0*t**9.0*tf-40.0*t**8.0*to*tf+20.0*t**7.0*to**2.0*tf-70.0*t**8.0*tf**2.0+140.0*t**7.0*to*tf**2.0-70.0*t**6.0*to**2.0*tf**2.0+140.0*t**7.0*tf**3.0-280.0*t**6.0*to*tf**3.0+140.0*t**5.0*to**2.0*tf**3.0-175.0*t**6.0*tf**4.0+350.0*t**5.0*to*tf**4.0-175.0*t**4.0*to**2.0*tf**4.0+140.0*t**5.0*tf**5.0-280.0*t**4.0*to*tf**5.0+140.0*t**3.0*to**2.0*tf**5.0-70.0*t**4.0*tf**6.0+140.0*t**3.0*to*tf**6.0-70.0*t**2.0*to**2.0*tf**6.0+20.0*t**3.0*tf**7.0-40.0*t**2.0*to*tf**7.0+20.0*t*to**2.0*tf**7.0-(5.0*t**2.0*tf**8.0)/2.0+5.0*t*to*tf**8.0-(5.0*to**2.0*tf**8.0)/2.0)*x1-(1.0/((to-tf)**10.0))*5.0*(5.0*t**10.0-(130.0*t**9.0*to)/9.0+(55.0*t**8.0*to**2.0)/4.0-(30.0*t**7.0*to**3.0)/7.0-(5.0*to**10.0)/252.0-(320.0*t**9.0*tf)/9.0+205.0/2.0*t**8.0*to*tf-680.0/7.0*t**7.0*to**2.0*tf+30.0*t**6.0*to**3.0*tf+(25.0*to**9.0*tf)/126.0+(435.0*t**8.0*tf**2.0)/4.0-2190.0/7.0*t**7.0*to*tf**2.0+295.0*t**6.0*to**2.0*tf**2.0-90.0*t**5.0*to**3.0*tf**2.0-(25.0*to**8.0*tf**2.0)/28.0-(1300.0*t**7.0*tf**3.0)/7.0+1600.0/3.0*t**6.0*to*tf**3.0-500.0*t**5.0*to**2.0*tf**3.0+150.0*t**4.0*to**3.0*tf**3.0+(50.0*to**7.0*tf**3.0)/21.0+(575.0*t**6.0*tf**4.0)/3.0-550.0*t**5.0*to*tf**4.0+1025.0/2.0*t**4.0*to**2.0*tf**4.0-150.0*t**3.0*to**3.0*tf**4.0-(25.0*to**6.0*tf**4.0)/6.0-120.0*t**5.0*tf**5.0+345.0*t**4.0*to*tf**5.0-320.0*t**3.0*to**2.0*tf**5.0+90.0*t**2.0*to**3.0*tf**5.0+5.0*to**5.0*tf**5.0+(85.0*t**4.0*tf**6.0)/2.0-370.0/3.0*t**3.0*to*tf**6.0+115.0*t**2.0*to**2.0*tf**6.0-30.0*t*to**3.0*tf**6.0-(25.0*to**4.0*tf**6.0)/6.0-(20.0*t**3.0*tf**7.0)/3.0+20.0*t**2.0*to*tf**7.0-20.0*t*to**2.0*tf**7.0+(20.0*to**3.0*tf**7.0)/3.0)*x2-(1.0/((to-tf)**10.0))*5.0*(-5.0*t**10.0+(170.0*t**9.0*to)/9.0-(105.0*t**8.0*to**2.0)/4.0+(110.0*t**7.0*to**3.0)/7.0-(10.0*t**6.0*to**4.0)/3.0-(5.0*to**10.0)/252.0+(280.0*t**9.0*tf)/9.0-235.0/2.0*t**8.0*to*tf+1140.0/7.0*t**7.0*to**2.0*tf-290.0/3.0*t**6.0*to**3.0*tf+20.0*t**5.0*to**4.0*tf+(25.0*to**9.0*tf)/126.0-(325.0*t**8.0*tf**2.0)/4.0+2150.0/7.0*t**7.0*to*tf**2.0-425.0*t**6.0*to**2.0*tf**2.0+250.0*t**5.0*to**3.0*tf**2.0-50.0*t**4.0*to**4.0*tf**2.0-(25.0*to**8.0*tf**2.0)/28.0+(800.0*t**7.0*tf**3.0)/7.0-1300.0/3.0*t**6.0*to*tf**3.0+600.0*t**5.0*to**2.0*tf**3.0-350.0*t**4.0*to**3.0*tf**3.0+200.0/3.0*t**3.0*to**4.0*tf**3.0+(50.0*to**7.0*tf**3.0)/21.0-(275.0*t**6.0*tf**4.0)/3.0+350.0*t**5.0*to*tf**4.0-975.0/2.0*t**4.0*to**2.0*tf**4.0+850.0/3.0*t**3.0*to**3.0*tf**4.0-50.0*t**2.0*to**4.0*tf**4.0-(25.0*to**6.0*tf**4.0)/6.0+40.0*t**5.0*tf**5.0-155.0*t**4.0*to*tf**5.0+220.0*t**3.0*to**2.0*tf**5.0-130.0*t**2.0*to**3.0*tf**5.0+20.0*t*to**4.0*tf**5.0+5.0*to**5.0*tf**5.0-(15.0*t**4.0*tf**6.0)/2.0+30.0*t**3.0*to*tf**6.0-45.0*t**2.0*to**2.0*tf**6.0+30.0*t*to**3.0*tf**6.0-(15.0*to**4.0*tf**6.0)/2.0)*x3-(1.0/((to-tf)**10.0))*5.0*((5.0*t**10.0)/2.0-(35.0*t**9.0*to)/3.0+(85.0*t**8.0*to**2.0)/4.0-(130.0*t**7.0*to**3.0)/7.0+(15.0*t**6.0*to**4.0)/2.0-t**5.0*to**5.0-to**10.0/84.0-(40.0*t**9.0*tf)/3.0+125.0/2.0*t**8.0*to*tf-800.0/7.0*t**7.0*to**2.0*tf+100.0*t**6.0*to**3.0*tf-40.0*t**5.0*to**4.0*tf+5.0*t**4.0*to**5.0*tf+(5.0*to**9.0*tf)/42.0+(115.0*t**8.0*tf**2.0)/4.0-950.0/7.0*t**7.0*to*tf**2.0+250.0*t**6.0*to**2.0*tf**2.0-220.0*t**5.0*to**3.0*tf**2.0+175.0/2.0*t**4.0*to**4.0*tf**2.0-10.0*t**3.0*to**5.0*tf**2.0-(15.0*to**8.0*tf**2.0)/28.0-(220.0*t**7.0*tf**3.0)/7.0+150.0*t**6.0*to*tf**3.0-280.0*t**5.0*to**2.0*tf**3.0+250.0*t**4.0*to**3.0*tf**3.0-100.0*t**3.0*to**4.0*tf**3.0+10.0*t**2.0*to**5.0*tf**3.0+(10.0*to**7.0*tf**3.0)/7.0+(35.0*t**6.0*tf**4.0)/2.0-85.0*t**5.0*to*tf**4.0+325.0/2.0*t**4.0*to**2.0*tf**4.0-150.0*t**3.0*to**3.0*tf**4.0+125.0/2.0*t**2.0*to**4.0*tf**4.0-5.0*t*to**5.0*tf**4.0-(5.0*to**6.0*tf**4.0)/2.0-4.0*t**5.0*tf**5.0+20.0*t**4.0*to*tf**5.0-40.0*t**3.0*to**2.0*tf**5.0+40.0*t**2.0*to**3.0*tf**5.0-20.0*t*to**4.0*tf**5.0+4.0*to**5.0*tf**5.0)*x4-(1.0/((to-tf)**10.0))*5.0*(-(t**10.0/2.0)+(25.0*t**9.0*to)/9.0-(25.0*t**8.0*to**2.0)/4.0+(50.0*t**7.0*to**3.0)/7.0-(25.0*t**6.0*to**4.0)/6.0+t**5.0*to**5.0-to**10.0/252.0+(20.0*t**9.0*tf)/9.0-25.0/2.0*t**8.0*to*tf+200.0/7.0*t**7.0*to**2.0*tf-100.0/3.0*t**6.0*to**3.0*tf+20.0*t**5.0*to**4.0*tf-5.0*t**4.0*to**5.0*tf+(5.0*to**9.0*tf)/126.0-(15.0*t**8.0*tf**2.0)/4.0+150.0/7.0*t**7.0*to*tf**2.0-50.0*t**6.0*to**2.0*tf**2.0+60.0*t**5.0*to**3.0*tf**2.0-75.0/2.0*t**4.0*to**4.0*tf**2.0+10.0*t**3.0*to**5.0*tf**2.0-(5.0*to**8.0*tf**2.0)/28.0+(20.0*t**7.0*tf**3.0)/7.0-50.0/3.0*t**6.0*to*tf**3.0+40.0*t**5.0*to**2.0*tf**3.0-50.0*t**4.0*to**3.0*tf**3.0+100.0/3.0*t**3.0*to**4.0*tf**3.0-10.0*t**2.0*to**5.0*tf**3.0+(10.0*to**7.0*tf**3.0)/21.0-(5.0*t**6.0*tf**4.0)/6.0+5.0*t**5.0*to*tf**4.0-25.0/2.0*t**4.0*to**2.0*tf**4.0+50.0/3.0*t**3.0*to**3.0*tf**4.0-25.0/2.0*t**2.0*to**4.0*tf**4.0+5.0*t*to**5.0*tf**4.0-(5.0*to**6.0*tf**4.0)/6.0)*x5
	coef2t=-(1.0/((to-tf)**10.0))*5.0*(-t**10.0+(20.0*t**9.0*to)/9.0-(5.0*t**8.0*to**2.0)/4.0+to**10.0/36.0+(70.0*t**9.0*tf)/9.0-35.0/2.0*t**8.0*to*tf+10.0*t**7.0*to**2.0*tf-(5.0*to**9.0*tf)/18.0-(105.0*t**8.0*tf**2.0)/4.0+60.0*t**7.0*to*tf**2.0-35.0*t**6.0*to**2.0*tf**2.0+(5.0*to**8.0*tf**2.0)/4.0+50.0*t**7.0*tf**3.0-350.0/3.0*t**6.0*to*tf**3.0+70.0*t**5.0*to**2.0*tf**3.0-(10.0*to**7.0*tf**3.0)/3.0-(175.0*t**6.0*tf**4.0)/3.0+140.0*t**5.0*to*tf**4.0-175.0/2.0*t**4.0*to**2.0*tf**4.0+(35.0*to**6.0*tf**4.0)/6.0+42.0*t**5.0*tf**5.0-105.0*t**4.0*to*tf**5.0+70.0*t**3.0*to**2.0*tf**5.0-7.0*to**5.0*tf**5.0-(35.0*t**4.0*tf**6.0)/2.0+140.0/3.0*t**3.0*to*tf**6.0-35.0*t**2.0*to**2.0*tf**6.0+(35.0*to**4.0*tf**6.0)/6.0+(10.0*t**3.0*tf**7.0)/3.0-10.0*t**2.0*to*tf**7.0+10.0*t*to**2.0*tf**7.0-(10.0*to**3.0*tf**7.0)/3.0)*x0-(1.0/((to-tf)**10.0))*5.0*(5.0*t**10.0-(140.0*t**9.0*to)/9.0+(65.0*t**8.0*to**2.0)/4.0-(40.0*t**7.0*to**3.0)/7.0+(5.0*to**10.0)/252.0-(310.0*t**9.0*tf)/9.0+215.0/2.0*t**8.0*to*tf-790.0/7.0*t**7.0*to**2.0*tf+40.0*t**6.0*to**3.0*tf-(25.0*to**9.0*tf)/126.0+(405.0*t**8.0*tf**2.0)/4.0-2220.0/7.0*t**7.0*to*tf**2.0+335.0*t**6.0*to**2.0*tf**2.0-120.0*t**5.0*to**3.0*tf**2.0+(25.0*to**8.0*tf**2.0)/28.0-(1150.0*t**7.0*tf**3.0)/7.0+1550.0/3.0*t**6.0*to*tf**3.0-550.0*t**5.0*to**2.0*tf**3.0+200.0*t**4.0*to**3.0*tf**3.0-(50.0*to**7.0*tf**3.0)/21.0+(475.0*t**6.0*tf**4.0)/3.0-500.0*t**5.0*to*tf**4.0+1075.0/2.0*t**4.0*to**2.0*tf**4.0-200.0*t**3.0*to**3.0*tf**4.0+(25.0*to**6.0*tf**4.0)/6.0-90.0*t**5.0*tf**5.0+285.0*t**4.0*to*tf**5.0-310.0*t**3.0*to**2.0*tf**5.0+120.0*t**2.0*to**3.0*tf**5.0-5.0*to**5.0*tf**5.0+(55.0*t**4.0*tf**6.0)/2.0-260.0/3.0*t**3.0*to*tf**6.0+95.0*t**2.0*to**2.0*tf**6.0-40.0*t*to**3.0*tf**6.0+(25.0*to**4.0*tf**6.0)/6.0-(10.0*t**3.0*tf**7.0)/3.0+10.0*t**2.0*to*tf**7.0-10.0*t*to**2.0*tf**7.0+(10.0*to**3.0*tf**7.0)/3.0)*x1-(1.0/((to-tf)**10.0))*5.0*(-10.0*t**10.0+40.0*t**9.0*to-60.0*t**8.0*to**2.0+40.0*t**7.0*to**3.0-10.0*t**6.0*to**4.0+60.0*t**9.0*tf-240.0*t**8.0*to*tf+360.0*t**7.0*to**2.0*tf-240.0*t**6.0*to**3.0*tf+60.0*t**5.0*to**4.0*tf-150.0*t**8.0*tf**2.0+600.0*t**7.0*to*tf**2.0-900.0*t**6.0*to**2.0*tf**2.0+600.0*t**5.0*to**3.0*tf**2.0-150.0*t**4.0*to**4.0*tf**2.0+200.0*t**7.0*tf**3.0-800.0*t**6.0*to*tf**3.0+1200.0*t**5.0*to**2.0*tf**3.0-800.0*t**4.0*to**3.0*tf**3.0+200.0*t**3.0*to**4.0*tf**3.0-150.0*t**6.0*tf**4.0+600.0*t**5.0*to*tf**4.0-900.0*t**4.0*to**2.0*tf**4.0+600.0*t**3.0*to**3.0*tf**4.0-150.0*t**2.0*to**4.0*tf**4.0+60.0*t**5.0*tf**5.0-240.0*t**4.0*to*tf**5.0+360.0*t**3.0*to**2.0*tf**5.0-240.0*t**2.0*to**3.0*tf**5.0+60.0*t*to**4.0*tf**5.0-10.0*t**4.0*tf**6.0+40.0*t**3.0*to*tf**6.0-60.0*t**2.0*to**2.0*tf**6.0+40.0*t*to**3.0*tf**6.0-10.0*to**4.0*tf**6.0)*x2-(1.0/((to-tf)**10.0))*5.0*(10.0*t**10.0-(440.0*t**9.0*to)/9.0+95.0*t**8.0*to**2.0-(640.0*t**7.0*to**3.0)/7.0+(130.0*t**6.0*to**4.0)/3.0-8.0*t**5.0*to**5.0-to**10.0/63.0-(460.0*t**9.0*tf)/9.0+250.0*t**8.0*to*tf-3400.0/7.0*t**7.0*to**2.0*tf+1400.0/3.0*t**6.0*to**3.0*tf-220.0*t**5.0*to**4.0*tf+40.0*t**4.0*to**5.0*tf+(10.0*to**9.0*tf)/63.0+105.0*t**8.0*tf**2.0-3600.0/7.0*t**7.0*to*tf**2.0+1000.0*t**6.0*to**2.0*tf**2.0-960.0*t**5.0*to**3.0*tf**2.0+450.0*t**4.0*to**4.0*tf**2.0-80.0*t**3.0*to**5.0*tf**2.0-(5.0*to**8.0*tf**2.0)/7.0-(760.0*t**7.0*tf**3.0)/7.0+1600.0/3.0*t**6.0*to*tf**3.0-1040.0*t**5.0*to**2.0*tf**3.0+1000.0*t**4.0*to**3.0*tf**3.0-1400.0/3.0*t**3.0*to**4.0*tf**3.0+80.0*t**2.0*to**5.0*tf**3.0+(40.0*to**7.0*tf**3.0)/21.0+(170.0*t**6.0*tf**4.0)/3.0-280.0*t**5.0*to*tf**4.0+550.0*t**4.0*to**2.0*tf**4.0-1600.0/3.0*t**3.0*to**3.0*tf**4.0+250.0*t**2.0*to**4.0*tf**4.0-40.0*t*to**5.0*tf**4.0-(10.0*to**6.0*tf**4.0)/3.0-12.0*t**5.0*tf**5.0+60.0*t**4.0*to*tf**5.0-120.0*t**3.0*to**2.0*tf**5.0+120.0*t**2.0*to**3.0*tf**5.0-60.0*t*to**4.0*tf**5.0+12.0*to**5.0*tf**5.0)*x3-(1.0/((to-tf)**10.0))*5.0*(-5.0*t**10.0+(260.0*t**9.0*to)/9.0-(275.0*t**8.0*to**2.0)/4.0+(600.0*t**7.0*to**3.0)/7.0-(175.0*t**6.0*to**4.0)/3.0+20.0*t**5.0*to**5.0-(5.0*t**4.0*to**6.0)/2.0-(5.0*to**10.0)/252.0+(190.0*t**9.0*tf)/9.0-245.0/2.0*t**8.0*to*tf+2050.0/7.0*t**7.0*to**2.0*tf-1100.0/3.0*t**6.0*to**3.0*tf+250.0*t**5.0*to**4.0*tf-85.0*t**4.0*to**5.0*tf+10.0*t**3.0*to**6.0*tf+(25.0*to**9.0*tf)/126.0-(135.0*t**8.0*tf**2.0)/4.0+1380.0/7.0*t**7.0*to*tf**2.0-475.0*t**6.0*to**2.0*tf**2.0+600.0*t**5.0*to**3.0*tf**2.0-825.0/2.0*t**4.0*to**4.0*tf**2.0+140.0*t**3.0*to**5.0*tf**2.0-15.0*t**2.0*to**6.0*tf**2.0-(25.0*to**8.0*tf**2.0)/28.0+(170.0*t**7.0*tf**3.0)/7.0-430.0/3.0*t**6.0*to*tf**3.0+350.0*t**5.0*to**2.0*tf**3.0-450.0*t**4.0*to**3.0*tf**3.0+950.0/3.0*t**3.0*to**4.0*tf**3.0-110.0*t**2.0*to**5.0*tf**3.0+10.0*t*to**6.0*tf**3.0+(50.0*to**7.0*tf**3.0)/21.0-(20.0*t**6.0*tf**4.0)/3.0+40.0*t**5.0*to*tf**4.0-100.0*t**4.0*to**2.0*tf**4.0+400.0/3.0*t**3.0*to**3.0*tf**4.0-100.0*t**2.0*to**4.0*tf**4.0+40.0*t*to**5.0*tf**4.0-(20.0*to**6.0*tf**4.0)/3.0)*x4-(1.0/((to-tf)**10.0))*5.0*(t**10.0-(20.0*t**9.0*to)/3.0+(75.0*t**8.0*to**2.0)/4.0-(200.0*t**7.0*to**3.0)/7.0+25.0*t**6.0*to**4.0-12.0*t**5.0*to**5.0+(5.0*t**4.0*to**6.0)/2.0-to**10.0/84.0-(10.0*t**9.0*tf)/3.0+45.0/2.0*t**8.0*to*tf-450.0/7.0*t**7.0*to**2.0*tf+100.0*t**6.0*to**3.0*tf-90.0*t**5.0*to**4.0*tf+45.0*t**4.0*to**5.0*tf-10.0*t**3.0*to**6.0*tf+(5.0*to**9.0*tf)/42.0+(15.0*t**8.0*tf**2.0)/4.0-180.0/7.0*t**7.0*to*tf**2.0+75.0*t**6.0*to**2.0*tf**2.0-120.0*t**5.0*to**3.0*tf**2.0+225.0/2.0*t**4.0*to**4.0*tf**2.0-60.0*t**3.0*to**5.0*tf**2.0+15.0*t**2.0*to**6.0*tf**2.0-(15.0*to**8.0*tf**2.0)/28.0-(10.0*t**7.0*tf**3.0)/7.0+10.0*t**6.0*to*tf**3.0-30.0*t**5.0*to**2.0*tf**3.0+50.0*t**4.0*to**3.0*tf**3.0-50.0*t**3.0*to**4.0*tf**3.0+30.0*t**2.0*to**5.0*tf**3.0-10.0*t*to**6.0*tf**3.0+(10.0*to**7.0*tf**3.0)/7.0)*x5
	coef3t= -(1.0/((to-tf)**10.0))*5.0*(t**10.0-(10.0*t**9.0*to)/3.0+(15.0*t**8.0*to**2.0)/4.0-(10.0*t**7.0*to**3.0)/7.0+to**10.0/84.0-(20.0*t**9.0*tf)/3.0+45.0/2.0*t**8.0*to*tf-180.0/7.0*t**7.0*to**2.0*tf+10.0*t**6.0*to**3.0*tf-(5.0*to**9.0*tf)/42.0+(75.0*t**8.0*tf**2.0)/4.0-450.0/7.0*t**7.0*to*tf**2.0+75.0*t**6.0*to**2.0*tf**2.0-30.0*t**5.0*to**3.0*tf**2.0+(15.0*to**8.0*tf**2.0)/28.0-(200.0*t**7.0*tf**3.0)/7.0+100.0*t**6.0*to*tf**3.0-120.0*t**5.0*to**2.0*tf**3.0+50.0*t**4.0*to**3.0*tf**3.0-(10.0*to**7.0*tf**3.0)/7.0+25.0*t**6.0*tf**4.0-90.0*t**5.0*to*tf**4.0+225.0/2.0*t**4.0*to**2.0*tf**4.0-50.0*t**3.0*to**3.0*tf**4.0+(5.0*to**6.0*tf**4.0)/2.0-12.0*t**5.0*tf**5.0+45.0*t**4.0*to*tf**5.0-60.0*t**3.0*to**2.0*tf**5.0+30.0*t**2.0*to**3.0*tf**5.0-3.0*to**5.0*tf**5.0+(5.0*t**4.0*tf**6.0)/2.0-10.0*t**3.0*to*tf**6.0+15.0*t**2.0*to**2.0*tf**6.0-10.0*t*to**3.0*tf**6.0+(5.0*to**4.0*tf**6.0)/2.0)*x0-(1.0/((to-tf)**10.0))*5.0*(-5.0*t**10.0+(190.0*t**9.0*to)/9.0-(135.0*t**8.0*to**2.0)/4.0+(170.0*t**7.0*to**3.0)/7.0-(20.0*t**6.0*to**4.0)/3.0+(5.0*to**10.0)/252.0+(260.0*t**9.0*tf)/9.0-245.0/2.0*t**8.0*to*tf+1380.0/7.0*t**7.0*to**2.0*tf-430.0/3.0*t**6.0*to**3.0*tf+40.0*t**5.0*to**4.0*tf-(25.0*to**9.0*tf)/126.0-(275.0*t**8.0*tf**2.0)/4.0+2050.0/7.0*t**7.0*to*tf**2.0-475.0*t**6.0*to**2.0*tf**2.0+350.0*t**5.0*to**3.0*tf**2.0-100.0*t**4.0*to**4.0*tf**2.0+(25.0*to**8.0*tf**2.0)/28.0+(600.0*t**7.0*tf**3.0)/7.0-1100.0/3.0*t**6.0*to*tf**3.0+600.0*t**5.0*to**2.0*tf**3.0-450.0*t**4.0*to**3.0*tf**3.0+400.0/3.0*t**3.0*to**4.0*tf**3.0-(50.0*to**7.0*tf**3.0)/21.0-(175.0*t**6.0*tf**4.0)/3.0+250.0*t**5.0*to*tf**4.0-825.0/2.0*t**4.0*to**2.0*tf**4.0+950.0/3.0*t**3.0*to**3.0*tf**4.0-100.0*t**2.0*to**4.0*tf**4.0+(25.0*to**6.0*tf**4.0)/6.0+20.0*t**5.0*tf**5.0-85.0*t**4.0*to*tf**5.0+140.0*t**3.0*to**2.0*tf**5.0-110.0*t**2.0*to**3.0*tf**5.0+40.0*t*to**4.0*tf**5.0-5.0*to**5.0*tf**5.0-(5.0*t**4.0*tf**6.0)/2.0+10.0*t**3.0*to*tf**6.0-15.0*t**2.0*to**2.0*tf**6.0+10.0*t*to**3.0*tf**6.0-(5.0*to**4.0*tf**6.0)/2.0)*x1-(1.0/((to-tf)**10.0))*5.0*(10.0*t**10.0-(460.0*t**9.0*to)/9.0+105.0*t**8.0*to**2.0-(760.0*t**7.0*to**3.0)/7.0+(170.0*t**6.0*to**4.0)/3.0-12.0*t**5.0*to**5.0+to**10.0/63.0-(440.0*t**9.0*tf)/9.0+250.0*t**8.0*to*tf-3600.0/7.0*t**7.0*to**2.0*tf+1600.0/3.0*t**6.0*to**3.0*tf-280.0*t**5.0*to**4.0*tf+60.0*t**4.0*to**5.0*tf-(10.0*to**9.0*tf)/63.0+95.0*t**8.0*tf**2.0-3400.0/7.0*t**7.0*to*tf**2.0+1000.0*t**6.0*to**2.0*tf**2.0-1040.0*t**5.0*to**3.0*tf**2.0+550.0*t**4.0*to**4.0*tf**2.0-120.0*t**3.0*to**5.0*tf**2.0+(5.0*to**8.0*tf**2.0)/7.0-(640.0*t**7.0*tf**3.0)/7.0+1400.0/3.0*t**6.0*to*tf**3.0-960.0*t**5.0*to**2.0*tf**3.0+1000.0*t**4.0*to**3.0*tf**3.0-1600.0/3.0*t**3.0*to**4.0*tf**3.0+120.0*t**2.0*to**5.0*tf**3.0-(40.0*to**7.0*tf**3.0)/21.0+(130.0*t**6.0*tf**4.0)/3.0-220.0*t**5.0*to*tf**4.0+450.0*t**4.0*to**2.0*tf**4.0-1400.0/3.0*t**3.0*to**3.0*tf**4.0+250.0*t**2.0*to**4.0*tf**4.0-60.0*t*to**5.0*tf**4.0+(10.0*to**6.0*tf**4.0)/3.0-8.0*t**5.0*tf**5.0+40.0*t**4.0*to*tf**5.0-80.0*t**3.0*to**2.0*tf**5.0+80.0*t**2.0*to**3.0*tf**5.0-40.0*t*to**4.0*tf**5.0+8.0*to**5.0*tf**5.0)*x2-(1.0/((to-tf)**10.0))*5.0*(-10.0*t**10.0+60.0*t**9.0*to-150.0*t**8.0*to**2.0+200.0*t**7.0*to**3.0-150.0*t**6.0*to**4.0+60.0*t**5.0*to**5.0-10.0*t**4.0*to**6.0+40.0*t**9.0*tf-240.0*t**8.0*to*tf+600.0*t**7.0*to**2.0*tf-800.0*t**6.0*to**3.0*tf+600.0*t**5.0*to**4.0*tf-240.0*t**4.0*to**5.0*tf+40.0*t**3.0*to**6.0*tf-60.0*t**8.0*tf**2.0+360.0*t**7.0*to*tf**2.0-900.0*t**6.0*to**2.0*tf**2.0+1200.0*t**5.0*to**3.0*tf**2.0-900.0*t**4.0*to**4.0*tf**2.0+360.0*t**3.0*to**5.0*tf**2.0-60.0*t**2.0*to**6.0*tf**2.0+40.0*t**7.0*tf**3.0-240.0*t**6.0*to*tf**3.0+600.0*t**5.0*to**2.0*tf**3.0-800.0*t**4.0*to**3.0*tf**3.0+600.0*t**3.0*to**4.0*tf**3.0-240.0*t**2.0*to**5.0*tf**3.0+40.0*t*to**6.0*tf**3.0-10.0*t**6.0*tf**4.0+60.0*t**5.0*to*tf**4.0-150.0*t**4.0*to**2.0*tf**4.0+200.0*t**3.0*to**3.0*tf**4.0-150.0*t**2.0*to**4.0*tf**4.0+60.0*t*to**5.0*tf**4.0-10.0*to**6.0*tf**4.0)*x3-(1.0/((to-tf)**10.0))*5.0*(5.0*t**10.0-(310.0*t**9.0*to)/9.0+(405.0*t**8.0*to**2.0)/4.0-(1150.0*t**7.0*to**3.0)/7.0+(475.0*t**6.0*to**4.0)/3.0-90.0*t**5.0*to**5.0+(55.0*t**4.0*to**6.0)/2.0-(10.0*t**3.0*to**7.0)/3.0-(5.0*to**10.0)/252.0-(140.0*t**9.0*tf)/9.0+215.0/2.0*t**8.0*to*tf-2220.0/7.0*t**7.0*to**2.0*tf+1550.0/3.0*t**6.0*to**3.0*tf-500.0*t**5.0*to**4.0*tf+285.0*t**4.0*to**5.0*tf-260.0/3.0*t**3.0*to**6.0*tf+10.0*t**2.0*to**7.0*tf+(25.0*to**9.0*tf)/126.0+(65.0*t**8.0*tf**2.0)/4.0-790.0/7.0*t**7.0*to*tf**2.0+335.0*t**6.0*to**2.0*tf**2.0-550.0*t**5.0*to**3.0*tf**2.0+1075.0/2.0*t**4.0*to**4.0*tf**2.0-310.0*t**3.0*to**5.0*tf**2.0+95.0*t**2.0*to**6.0*tf**2.0-10.0*t*to**7.0*tf**2.0-(25.0*to**8.0*tf**2.0)/28.0-(40.0*t**7.0*tf**3.0)/7.0+40.0*t**6.0*to*tf**3.0-120.0*t**5.0*to**2.0*tf**3.0+200.0*t**4.0*to**3.0*tf**3.0-200.0*t**3.0*to**4.0*tf**3.0+120.0*t**2.0*to**5.0*tf**3.0-40.0*t*to**6.0*tf**3.0+(40.0*to**7.0*tf**3.0)/7.0)*x4-(1.0/((to-tf)**10.0))*5.0*(-t**10.0+(70.0*t**9.0*to)/9.0-(105.0*t**8.0*to**2.0)/4.0+50.0*t**7.0*to**3.0-(175.0*t**6.0*to**4.0)/3.0+42.0*t**5.0*to**5.0-(35.0*t**4.0*to**6.0)/2.0+(10.0*t**3.0*to**7.0)/3.0-to**10.0/36.0+(20.0*t**9.0*tf)/9.0-35.0/2.0*t**8.0*to*tf+60.0*t**7.0*to**2.0*tf-350.0/3.0*t**6.0*to**3.0*tf+140.0*t**5.0*to**4.0*tf-105.0*t**4.0*to**5.0*tf+140.0/3.0*t**3.0*to**6.0*tf-10.0*t**2.0*to**7.0*tf+(5.0*to**9.0*tf)/18.0-(5.0*t**8.0*tf**2.0)/4.0+10.0*t**7.0*to*tf**2.0-35.0*t**6.0*to**2.0*tf**2.0+70.0*t**5.0*to**3.0*tf**2.0-175.0/2.0*t**4.0*to**4.0*tf**2.0+70.0*t**3.0*to**5.0*tf**2.0-35.0*t**2.0*to**6.0*tf**2.0+10.0*t*to**7.0*tf**2.0-(5.0*to**8.0*tf**2.0)/4.0)*x5
	coef4t=-(1.0/((to-tf)**10.0))*5.0*(-(t**10.0/2.0)+(20.0*t**9.0*to)/9.0-(15.0*t**8.0*to**2.0)/4.0+(20.0*t**7.0*to**3.0)/7.0-(5.0*t**6.0*to**4.0)/6.0+to**10.0/252.0+(25.0*t**9.0*tf)/9.0-25.0/2.0*t**8.0*to*tf+150.0/7.0*t**7.0*to**2.0*tf-50.0/3.0*t**6.0*to**3.0*tf+5.0*t**5.0*to**4.0*tf-(5.0*to**9.0*tf)/126.0-(25.0*t**8.0*tf**2.0)/4.0+200.0/7.0*t**7.0*to*tf**2.0-50.0*t**6.0*to**2.0*tf**2.0+40.0*t**5.0*to**3.0*tf**2.0-25.0/2.0*t**4.0*to**4.0*tf**2.0+(5.0*to**8.0*tf**2.0)/28.0+(50.0*t**7.0*tf**3.0)/7.0-100.0/3.0*t**6.0*to*tf**3.0+60.0*t**5.0*to**2.0*tf**3.0-50.0*t**4.0*to**3.0*tf**3.0+50.0/3.0*t**3.0*to**4.0*tf**3.0-(10.0*to**7.0*tf**3.0)/21.0-(25.0*t**6.0*tf**4.0)/6.0+20.0*t**5.0*to*tf**4.0-75.0/2.0*t**4.0*to**2.0*tf**4.0+100.0/3.0*t**3.0*to**3.0*tf**4.0-25.0/2.0*t**2.0*to**4.0*tf**4.0+(5.0*to**6.0*tf**4.0)/6.0+t**5.0*tf**5.0-5.0*t**4.0*to*tf**5.0+10.0*t**3.0*to**2.0*tf**5.0-10.0*t**2.0*to**3.0*tf**5.0+5.0*t*to**4.0*tf**5.0-to**5.0*tf**5.0)*x0-(1.0/((to-tf)**10.0))*5.0*((5.0*t**10.0)/2.0-(40.0*t**9.0*to)/3.0+(115.0*t**8.0*to**2.0)/4.0-(220.0*t**7.0*to**3.0)/7.0+(35.0*t**6.0*to**4.0)/2.0-4.0*t**5.0*to**5.0+to**10.0/84.0-(35.0*t**9.0*tf)/3.0+125.0/2.0*t**8.0*to*tf-950.0/7.0*t**7.0*to**2.0*tf+150.0*t**6.0*to**3.0*tf-85.0*t**5.0*to**4.0*tf+20.0*t**4.0*to**5.0*tf-(5.0*to**9.0*tf)/42.0+(85.0*t**8.0*tf**2.0)/4.0-800.0/7.0*t**7.0*to*tf**2.0+250.0*t**6.0*to**2.0*tf**2.0-280.0*t**5.0*to**3.0*tf**2.0+325.0/2.0*t**4.0*to**4.0*tf**2.0-40.0*t**3.0*to**5.0*tf**2.0+(15.0*to**8.0*tf**2.0)/28.0-(130.0*t**7.0*tf**3.0)/7.0+100.0*t**6.0*to*tf**3.0-220.0*t**5.0*to**2.0*tf**3.0+250.0*t**4.0*to**3.0*tf**3.0-150.0*t**3.0*to**4.0*tf**3.0+40.0*t**2.0*to**5.0*tf**3.0-(10.0*to**7.0*tf**3.0)/7.0+(15.0*t**6.0*tf**4.0)/2.0-40.0*t**5.0*to*tf**4.0+175.0/2.0*t**4.0*to**2.0*tf**4.0-100.0*t**3.0*to**3.0*tf**4.0+125.0/2.0*t**2.0*to**4.0*tf**4.0-20.0*t*to**5.0*tf**4.0+(5.0*to**6.0*tf**4.0)/2.0-t**5.0*tf**5.0+5.0*t**4.0*to*tf**5.0-10.0*t**3.0*to**2.0*tf**5.0+10.0*t**2.0*to**3.0*tf**5.0-5.0*t*to**4.0*tf**5.0+to**5.0*tf**5.0)*x1-(1.0/((to-tf)**10.0))*5.0*(-5.0*t**10.0+(280.0*t**9.0*to)/9.0-(325.0*t**8.0*to**2.0)/4.0+(800.0*t**7.0*to**3.0)/7.0-(275.0*t**6.0*to**4.0)/3.0+40.0*t**5.0*to**5.0-(15.0*t**4.0*to**6.0)/2.0+(5.0*to**10.0)/252.0+(170.0*t**9.0*tf)/9.0-235.0/2.0*t**8.0*to*tf+2150.0/7.0*t**7.0*to**2.0*tf-1300.0/3.0*t**6.0*to**3.0*tf+350.0*t**5.0*to**4.0*tf-155.0*t**4.0*to**5.0*tf+30.0*t**3.0*to**6.0*tf-(25.0*to**9.0*tf)/126.0-(105.0*t**8.0*tf**2.0)/4.0+1140.0/7.0*t**7.0*to*tf**2.0-425.0*t**6.0*to**2.0*tf**2.0+600.0*t**5.0*to**3.0*tf**2.0-975.0/2.0*t**4.0*to**4.0*tf**2.0+220.0*t**3.0*to**5.0*tf**2.0-45.0*t**2.0*to**6.0*tf**2.0+(25.0*to**8.0*tf**2.0)/28.0+(110.0*t**7.0*tf**3.0)/7.0-290.0/3.0*t**6.0*to*tf**3.0+250.0*t**5.0*to**2.0*tf**3.0-350.0*t**4.0*to**3.0*tf**3.0+850.0/3.0*t**3.0*to**4.0*tf**3.0-130.0*t**2.0*to**5.0*tf**3.0+30.0*t*to**6.0*tf**3.0-(50.0*to**7.0*tf**3.0)/21.0-(10.0*t**6.0*tf**4.0)/3.0+20.0*t**5.0*to*tf**4.0-50.0*t**4.0*to**2.0*tf**4.0+200.0/3.0*t**3.0*to**3.0*tf**4.0-50.0*t**2.0*to**4.0*tf**4.0+20.0*t*to**5.0*tf**4.0-(10.0*to**6.0*tf**4.0)/3.0)*x2-(1.0/((to-tf)**10.0))*5.0*(5.0*t**10.0-(320.0*t**9.0*to)/9.0+(435.0*t**8.0*to**2.0)/4.0-(1300.0*t**7.0*to**3.0)/7.0+(575.0*t**6.0*to**4.0)/3.0-120.0*t**5.0*to**5.0+(85.0*t**4.0*to**6.0)/2.0-(20.0*t**3.0*to**7.0)/3.0+(5.0*to**10.0)/252.0-(130.0*t**9.0*tf)/9.0+205.0/2.0*t**8.0*to*tf-2190.0/7.0*t**7.0*to**2.0*tf+1600.0/3.0*t**6.0*to**3.0*tf-550.0*t**5.0*to**4.0*tf+345.0*t**4.0*to**5.0*tf-370.0/3.0*t**3.0*to**6.0*tf+20.0*t**2.0*to**7.0*tf-(25.0*to**9.0*tf)/126.0+(55.0*t**8.0*tf**2.0)/4.0-680.0/7.0*t**7.0*to*tf**2.0+295.0*t**6.0*to**2.0*tf**2.0-500.0*t**5.0*to**3.0*tf**2.0+1025.0/2.0*t**4.0*to**4.0*tf**2.0-320.0*t**3.0*to**5.0*tf**2.0+115.0*t**2.0*to**6.0*tf**2.0-20.0*t*to**7.0*tf**2.0+(25.0*to**8.0*tf**2.0)/28.0-(30.0*t**7.0*tf**3.0)/7.0+30.0*t**6.0*to*tf**3.0-90.0*t**5.0*to**2.0*tf**3.0+150.0*t**4.0*to**3.0*tf**3.0-150.0*t**3.0*to**4.0*tf**3.0+90.0*t**2.0*to**5.0*tf**3.0-30.0*t*to**6.0*tf**3.0+(30.0*to**7.0*tf**3.0)/7.0)*x3-(1.0/((to-tf)**10.0))*5.0*(-((5.0*t**10.0)/2.0)+20.0*t**9.0*to-70.0*t**8.0*to**2.0+140.0*t**7.0*to**3.0-175.0*t**6.0*to**4.0+140.0*t**5.0*to**5.0-70.0*t**4.0*to**6.0+20.0*t**3.0*to**7.0-(5.0*t**2.0*to**8.0)/2.0+5.0*t**9.0*tf-40.0*t**8.0*to*tf+140.0*t**7.0*to**2.0*tf-280.0*t**6.0*to**3.0*tf+350.0*t**5.0*to**4.0*tf-280.0*t**4.0*to**5.0*tf+140.0*t**3.0*to**6.0*tf-40.0*t**2.0*to**7.0*tf+5.0*t*to**8.0*tf-(5.0*t**8.0*tf**2.0)/2.0+20.0*t**7.0*to*tf**2.0-70.0*t**6.0*to**2.0*tf**2.0+140.0*t**5.0*to**3.0*tf**2.0-175.0*t**4.0*to**4.0*tf**2.0+140.0*t**3.0*to**5.0*tf**2.0-70.0*t**2.0*to**6.0*tf**2.0+20.0*t*to**7.0*tf**2.0-(5.0*to**8.0*tf**2.0)/2.0)*x4-(1.0/((to-tf)**10.0))*5.0*(t**10.0/2.0-(40.0*t**9.0*to)/9.0+(35.0*t**8.0*to**2.0)/2.0-40.0*t**7.0*to**3.0+(175.0*t**6.0*to**4.0)/3.0-56.0*t**5.0*to**5.0+35.0*t**4.0*to**6.0-(40.0*t**3.0*to**7.0)/3.0+(5.0*t**2.0*to**8.0)/2.0-to**10.0/18.0-(5.0*t**9.0*tf)/9.0+5.0*t**8.0*to*tf-20.0*t**7.0*to**2.0*tf+140.0/3.0*t**6.0*to**3.0*tf-70.0*t**5.0*to**4.0*tf+70.0*t**4.0*to**5.0*tf-140.0/3.0*t**3.0*to**6.0*tf+20.0*t**2.0*to**7.0*tf-5.0*t*to**8.0*tf+(5.0*to**9.0*tf)/9.0)*x5
	coef5t=-(1.0/((to-tf)**10.0))*5.0*(t**10.0/10.0-(5.0*t**9.0*to)/9.0+(5.0*t**8.0*to**2.0)/4.0-(10.0*t**7.0*to**3.0)/7.0+(5.0*t**6.0*to**4.0)/6.0-(t**5.0*to**5.0)/5.0+to**10.0/1260.0-(4.0*t**9.0*tf)/9.0+5.0/2.0*t**8.0*to*tf-40.0/7.0*t**7.0*to**2.0*tf+20.0/3.0*t**6.0*to**3.0*tf-4.0*t**5.0*to**4.0*tf+t**4.0*to**5.0*tf-(to**9.0*tf)/126.0+(3.0*t**8.0*tf**2.0)/4.0-30.0/7.0*t**7.0*to*tf**2.0+10.0*t**6.0*to**2.0*tf**2.0-12.0*t**5.0*to**3.0*tf**2.0+15.0/2.0*t**4.0*to**4.0*tf**2.0-2.0*t**3.0*to**5.0*tf**2.0+(to**8.0*tf**2.0)/28.0-(4.0*t**7.0*tf**3.0)/7.0+10.0/3.0*t**6.0*to*tf**3.0-8.0*t**5.0*to**2.0*tf**3.0+10.0*t**4.0*to**3.0*tf**3.0-20.0/3.0*t**3.0*to**4.0*tf**3.0+2.0*t**2.0*to**5.0*tf**3.0-(2.0*to**7.0*tf**3.0)/21.0+(t**6.0*tf**4.0)/6.0-t**5.0*to*tf**4.0+5.0/2.0*t**4.0*to**2.0*tf**4.0-10.0/3.0*t**3.0*to**3.0*tf**4.0+5.0/2.0*t**2.0*to**4.0*tf**4.0-t*to**5.0*tf**4.0+(to**6.0*tf**4.0)/6.0)*x0-(1.0/((to-tf)**10.0))*5.0*(-(t**10.0/2.0)+(29.0*t**9.0*to)/9.0-(35.0*t**8.0*to**2.0)/4.0+(90.0*t**7.0*to**3.0)/7.0-(65.0*t**6.0*to**4.0)/6.0+5.0*t**5.0*to**5.0-t**4.0*to**6.0+to**10.0/252.0+(16.0*t**9.0*tf)/9.0-23.0/2.0*t**8.0*to*tf+220.0/7.0*t**7.0*to**2.0*tf-140.0/3.0*t**6.0*to**3.0*tf+40.0*t**5.0*to**4.0*tf-19.0*t**4.0*to**5.0*tf+4.0*t**3.0*to**6.0*tf-(5.0*to**9.0*tf)/126.0-(9.0*t**8.0*tf**2.0)/4.0+102.0/7.0*t**7.0*to*tf**2.0-40.0*t**6.0*to**2.0*tf**2.0+60.0*t**5.0*to**3.0*tf**2.0-105.0/2.0*t**4.0*to**4.0*tf**2.0+26.0*t**3.0*to**5.0*tf**2.0-6.0*t**2.0*to**6.0*tf**2.0+(5.0*to**8.0*tf**2.0)/28.0+(8.0*t**7.0*tf**3.0)/7.0-22.0/3.0*t**6.0*to*tf**3.0+20.0*t**5.0*to**2.0*tf**3.0-30.0*t**4.0*to**3.0*tf**3.0+80.0/3.0*t**3.0*to**4.0*tf**3.0-14.0*t**2.0*to**5.0*tf**3.0+4.0*t*to**6.0*tf**3.0-(10.0*to**7.0*tf**3.0)/21.0-(t**6.0*tf**4.0)/6.0+t**5.0*to*tf**4.0-5.0/2.0*t**4.0*to**2.0*tf**4.0+10.0/3.0*t**3.0*to**3.0*tf**4.0-5.0/2.0*t**2.0*to**4.0*tf**4.0+t*to**5.0*tf**4.0-(to**6.0*tf**4.0)/6.0)*x1-(1.0/((to-tf)**10.0))*5.0*(t**10.0-(22.0*t**9.0*to)/3.0+(93.0*t**8.0*to**2.0)/4.0-(290.0*t**7.0*to**3.0)/7.0+45.0*t**6.0*to**4.0-30.0*t**5.0*to**5.0+(23.0*t**4.0*to**6.0)/2.0-2.0*t**3.0*to**7.0+to**10.0/84.0-(8.0*t**9.0*tf)/3.0+39.0/2.0*t**8.0*to*tf-432.0/7.0*t**7.0*to**2.0*tf+110.0*t**6.0*to**3.0*tf-120.0*t**5.0*to**4.0*tf+81.0*t**4.0*to**5.0*tf-32.0*t**3.0*to**6.0*tf+6.0*t**2.0*to**7.0*tf-(5.0*to**9.0*tf)/42.0+(9.0*t**8.0*tf**2.0)/4.0-114.0/7.0*t**7.0*to*tf**2.0+51.0*t**6.0*to**2.0*tf**2.0-90.0*t**5.0*to**3.0*tf**2.0+195.0/2.0*t**4.0*to**4.0*tf**2.0-66.0*t**3.0*to**5.0*tf**2.0+27.0*t**2.0*to**6.0*tf**2.0-6.0*t*to**7.0*tf**2.0+(15.0*to**8.0*tf**2.0)/28.0-(4.0*t**7.0*tf**3.0)/7.0+4.0*t**6.0*to*tf**3.0-12.0*t**5.0*to**2.0*tf**3.0+20.0*t**4.0*to**3.0*tf**3.0-20.0*t**3.0*to**4.0*tf**3.0+12.0*t**2.0*to**5.0*tf**3.0-4.0*t*to**6.0*tf**3.0+(4.0*to**7.0*tf**3.0)/7.0)*x2-(1.0/((to-tf)**10.0))*5.0*(-t**10.0+(74.0*t**9.0*to)/9.0-(119.0*t**8.0*to**2.0)/4.0+62.0*t**7.0*to**3.0-(245.0*t**6.0*to**4.0)/3.0+70.0*t**5.0*to**5.0-(77.0*t**4.0*to**6.0)/2.0+(38.0*t**3.0*to**7.0)/3.0-2.0*t**2.0*to**8.0+to**10.0/36.0+(16.0*t**9.0*tf)/9.0-29.0/2.0*t**8.0*to*tf+52.0*t**7.0*to**2.0*tf-322.0/3.0*t**6.0*to**3.0*tf+140.0*t**5.0*to**4.0*tf-119.0*t**4.0*to**5.0*tf+196.0/3.0*t**3.0*to**6.0*tf-22.0*t**2.0*to**7.0*tf+4.0*t*to**8.0*tf-(5.0*to**9.0*tf)/18.0-(3.0*t**8.0*tf**2.0)/4.0+6.0*t**7.0*to*tf**2.0-21.0*t**6.0*to**2.0*tf**2.0+42.0*t**5.0*to**3.0*tf**2.0-105.0/2.0*t**4.0*to**4.0*tf**2.0+42.0*t**3.0*to**5.0*tf**2.0-21.0*t**2.0*to**6.0*tf**2.0+6.0*t*to**7.0*tf**2.0-(3.0*to**8.0*tf**2.0)/4.0)*x3-(1.0/((to-tf)**10.0))*5.0*(t**10.0/2.0-(41.0*t**9.0*to)/9.0+(37.0*t**8.0*to**2.0)/2.0-44.0*t**7.0*to**3.0+(203.0*t**6.0*to**4.0)/3.0-70.0*t**5.0*to**5.0+49.0*t**4.0*to**6.0-(68.0*t**3.0*to**7.0)/3.0+(13.0*t**2.0*to**8.0)/2.0-t*to**9.0+to**10.0/18.0-(4.0*t**9.0*tf)/9.0+4.0*t**8.0*to*tf-16.0*t**7.0*to**2.0*tf+112.0/3.0*t**6.0*to**3.0*tf-56.0*t**5.0*to**4.0*tf+56.0*t**4.0*to**5.0*tf-112.0/3.0*t**3.0*to**6.0*tf+16.0*t**2.0*to**7.0*tf-4.0*t*to**8.0*tf+(4.0*to**9.0*tf)/9.0)*x4-(5.0*(-(t**10.0/10.0)+t**9.0*to-(9.0*t**8.0*to**2.0)/2.0+12.0*t**7.0*to**3.0-21.0*t**6.0*to**4.0+(126.0*t**5.0*to**5.0)/5.0-21.0*t**4.0*to**6.0+12.0*t**3.0*to**7.0-(9.0*t**2.0*to**8.0)/2.0+t*to**9.0-to**10.0/10.0)*x5)/(to-tf)**10.0

	return [coefot,coef1t,coef2t,coef3t,coef4t,coef5t]


def get_coeffs_points(inp,to,tf,points):

	[xo,yo,ko,xf,yf,kf,xdoto,xddoto,xdotf,kdoto,kddoto,kdotf] = inp	

	xp = [i[0] for i in points]
	yp = [i[1] for i in points]
	kp = [i[2] for i in points]
	tp = [i[3] for i in points]


	Ax = [xo,xf,xdoto,xdotf,xddoto] + xp
	T = [to] + tp + [tf]
	h1 = xcomptraj_points(Ax,T)
	xo = h1[1-1]
	x1 = h1[2-1]
	x2 = h1[3-1]
	x3 = h1[4-1]
	x4 = h1[5-1]
	x5 = h1[6-1]


	t = tf
	[coefotf,coef1tf,coef2tf,coef3tf,coef4tf,coef5tf]=get_coeff(xo,x1,x2,x3,x4,x5,to,t,tf)

	coeftc=[]
	for t in tp:
		coeftc.append(get_coeff(xo,x1,x2,x3,x4,x5,to,t,tf))

	t = to
	[coefotc2,coef1tc2,coef2tc2,coef3tc2,coef4tc2,coef5tc2]=get_coeff(xo,x1,x2,x3,x4,x5,to,t,tf)

	t=to
	[Bodoto,B1doto,B2doto,B3doto,B4doto,B5doto,Boddoto,B1ddoto,B2ddoto,B3ddoto,B4ddoto,B5ddoto]=get_bernstein_differentials(to,t,tf)

	t=tf
	[Bodotf,B1dotf,B2dotf,B3dotf,B4dotf,B5dotf,Boddotf,B1ddotf,B2ddotf,B3ddotf,B4ddotf,B5ddotf]=get_bernstein_differentials(to,t,tf)
	  
	A1 = array([[B1doto,B2doto,B3doto,B4doto],
				[B1dotf,B2dotf,B3dotf,B4dotf],
				[coef1tf,coef2tf,coef3tf,coef4tf]] + [[i[1],i[2],i[3],i[4]] for i in coeftc])

	C1 = kdoto-Bodoto*ko-B5doto*kf
	C2 = kdotf-Bodotf*ko-B5dotf*kf
	C3 = yf-ko*coefotf-kf*coef5tf-yo
	C4 = [yp[i]-ko*coeftc[i][0]-kf*coeftc[i][-1]-yo for i in range(len(yp))]

	C = array([C1,C2,C3]+C4)

	XX=dot(linalg.pinv(A1),C)
	k1 = XX[0]
	k2 = XX[1]
	k3 = XX[2]
	k4 = XX[3]
	return [xo,x1,x2,x3,x4,x5,ko,k1,k2,k3,k4,kf]


def get_coeffs(inp,to,tf,points = []):

	[xo,yo,ko,xf,yf,kf,xdoto,xddoto,xdotf,kdoto,kddoto,kdotf] = inp	
	if points==[]:
		xc1=((xf+xo)/2.0)
		yc1=((yf+yo)/2.0)
		tc=to+0.5*(tf-to)
	else:
		xc1 = points[0]
		yc1 = points[1]
		tc = points[-1]



	Ax = [xo,xf,xdoto,xdotf,xddoto,xc1]

	h1 = xcomptraj(Ax,to,tc,tf)
	xo = h1[1-1]
	x1 = h1[2-1]
	x2 = h1[3-1]
	x3 = h1[4-1]
	x4 = h1[5-1]
	x5 = h1[6-1]


	t = tf
	[coefotf,coef1tf,coef2tf,coef3tf,coef4tf,coef5tf]=get_coeff(xo,x1,x2,x3,x4,x5,to,t,tf)

	t = tc
	[coefotc1,coef1tc1,coef2tc1,coef3tc1,coef4tc1,coef5tc1]=get_coeff(xo,x1,x2,x3,x4,x5,to,t,tf)

	t = to
	[coefotc2,coef1tc2,coef2tc2,coef3tc2,coef4tc2,coef5tc2]=get_coeff(xo,x1,x2,x3,x4,x5,to,t,tf)

	t=to
	[Bodoto,B1doto,B2doto,B3doto,B4doto,B5doto,Boddoto,B1ddoto,B2ddoto,B3ddoto,B4ddoto,B5ddoto]=get_bernstein_differentials(to,t,tf)

	t=tf
	[Bodotf,B1dotf,B2dotf,B3dotf,B4dotf,B5dotf,Boddotf,B1ddotf,B2ddotf,B3ddotf,B4ddotf,B5ddotf]=get_bernstein_differentials(to,t,tf)
	  
	A1 = array([[B1doto,B2doto,B3doto,B4doto],
				[B1dotf,B2dotf,B3dotf,B4dotf],
				[coef1tf,coef2tf,coef3tf,coef4tf],
				[coef1tc1,coef2tc1,coef3tc1,coef4tc1]])

	C1 = kdoto-Bodoto*ko-B5doto*kf
	C2 = kdotf-Bodotf*ko-B5dotf*kf
	C3 = yf-ko*coefotf-kf*coef5tf-yo
	C4 = yc1-ko*coefotc1-kf*coef5tc1-yo

	C5 =  kddoto-Boddoto*ko-B5ddoto*kf
	C = array([C1,C2,C3,C4])

	XX=dot(linalg.pinv(A1),C)
	k1 = XX[1-1]
	k2 = XX[2-1]
	k3 = XX[3-1]
	k4 = XX[4-1]
	return [xo,x1,x2,x3,x4,x5,ko,k1,k2,k3,k4,kf]
	
def getVel(coeffs,to,tf,t):
	[xo,x1,x2,x3,x4,xf,ko,k1,k2,k3,k4,kf] = coeffs
	[B0,B1,B2,B3,B4,B5] = get_bernstein_coefficients(to,t,tf)
	[Bodot,B1dot,B2dot,B3dot,B4dot,B5dot,Boddot,B1ddot,B2ddot,B3ddot,B4ddot,B5ddot]=get_bernstein_differentials(to,t,tf)

	xt_dot=Bodot*xo+B1dot*x1+B2dot*x2+B3dot*x3+B4dot*x4+B5dot*xf ## differential of x co-ordinate
	kt=B0*ko+B1*k1+B2*k2+B3*k3+B4*k4+B5*kf##bernstein for tan(teta)
	kt_dot=Bodot*ko+B1dot*k1+B2dot*k2+B3dot*k3+B4dot*k4+B5dot*kf ## differntial of bernstein for tan(theta)
	yt_dot=xt_dot*kt
	
	return xt_dot,yt_dot,kt_dot/(1+kt**2)

def getPos(coeffs,to,tf,t,yo):
	[xo,x1,x2,x3,x4,xf,ko,k1,k2,k3,k4,kf] = coeffs
	[B0,B1,B2,B3,B4,B5] = get_bernstein_coefficients(to,t,tf)
	[Bodot,B1dot,B2dot,B3dot,B4dot,B5dot,Boddot,B1ddot,B2ddot,B3ddot,B4ddot,B5ddot]=get_bernstein_differentials(to,t,tf)
	[coefot, coef1t, coef2t, coef3t, coef4t,coef5t ]=get_coeff(xo,x1,x2,x3,x4,xf,to,t,tf)
	xt = B0*xo+B1*x1+B2*x2+B3*x3+B4*x4+B5*xf
 	yt = yo+ko*coefot+k1*coef1t+k2*coef2t+k3*coef3t+k4*coef4t+kf*coef5t
 	kt=B0*ko+B1*k1+B2*k2+B3*k3+B4*k4+B5*kf
	point = Point()
	point.z = xt
	point.x = yt
	return point,kt